#cloud-config
# vim: syntax=yaml

disable_root: false
ssh_pwauth: true

ssh_authorized_keys:
{% for key in ssh_authorized_keys %}
  - {{ key }}
{% endfor %}

chpasswd:
  list: |
    root:{{ root_password }}
  expire: False

timezone: {{ vm_timezone }}

write_files:
 - content: |
     [environment:init]
     DIALOG/autoAcceptDefault=bool:True
     [environment:default]
     OVESETUP_CONFIG/adminPassword=str:{{ admin_password }}
     OVESETUP_CONFIG/fqdn=str:{{ engine_fqdn }}
     OVESETUP_PKI/organization=str:{{ engine_organization }}
     OVESETUP_DB/host=str:{{ ovirt_engine_db_host }}
     OVESETUP_DB/user=str:{{ ovirt_engine_db_user }}
     OVESETUP_DB/password=str:{{ ovirt_engine_db_password }}
     OVESETUP_DB/port=int:{{ ovirt_engine_db_port }}
     OVESETUP_DB/database=str:{{ ovirt_engine_db_name }}
     OVESETUP_CONFIG/applicationMode=str:{{ engine_application_mode }}
     OVESETUP_CONFIG/storageType=str:{% if hosted_storage_type == 'fcp' %}fc{% elif hosted_storage_type == 'glusterfs' %}gluster{% else %}{{ hosted_storage_type }}{% endif %}{{ '' }}
     OVESETUP_DWH_CORE/enable=bool:True
     OVESETUP_DWH_CONFIG/scale=str:1
     OVESETUP_DWH_CONFIG/dwhDbBackupDir=str:/var/lib/ovirt-engine-dwh/backups
     OVESETUP_DWH_DB/restoreBackupLate=bool:True
     OVESETUP_DWH_DB/disconnectExistingDwh=none:None
     OVESETUP_DWH_DB/performBackup=none:None
     OVESETUP_DWH_DB/host=str:{{ ovirt_engine_dwh_db_host }}
     OVESETUP_DWH_DB/user=str:{{ ovirt_engine_dwh_db_user }}
     OVESETUP_DWH_DB/password=str:{{ ovirt_engine_dwh_db_password }}
     OVESETUP_DWH_DB/port=int:{{ ovirt_engine_dwh_db_port }}
     OVESETUP_DWH_DB/database=str:{{ ovirt_engine_dwh_db_name }}
     OVESETUP_REPORTS_CORE/enable=bool:True
     OVESETUP_REPORTS_CONFIG/adminPassword=str:{{ admin_password }}
     OVESETUP_REPORTS_DB/host=str:{{ ovirt_engine_db_host }}
     OVESETUP_REPORTS_DB/password=str:{{ ovirt_engine_db_password }}
     OVESETUP_REPORTS_DB/port=int:{{ ovirt_engine_db_port }}
   path: /root/answers
   owner: root:root
   permissions: '0640'

{% if engine_vm_static_net_address %}
bootcmd:
 - setenforce 0
{% for dns in engine_vm_static_net_dns_list %}
 - echo "DNS{{loop.index}}={{ dns }}" >> {{ engine_vm_static_inet_file_path }}
{% endfor %}
 - if ! grep -Gq "^DOMAIN" {{ engine_vm_static_inet_file_path }}; then echo "DOMAIN={{ engine_vm_static_net_domain }}" >> {{ engine_vm_static_inet_file_path }}; fi
 - if ! grep -Gq "^GATEWAY" {{ engine_vm_static_inet_file_path }}; then echo "GATEWAY={{ engine_vm_static_net_gateway }}" >> {{ engine_vm_static_inet_file_path }}; fi
 - if ! grep -Gq "^DEFROUTE" {{ engine_vm_static_inet_file_path }}; then echo "DEFROUTE=yes" >> {{ engine_vm_static_inet_file_path }}; fi
 - ifdown {{ engine_vm_static_inet_name }}
 - ifup {{ engine_vm_static_inet_name }}
{% endif %}


runcmd:
 - echo "Running engine setup" 1>/dev/virtio-ports/org.ovirt.hosted-engine-setup.0 2>&1
 - /usr/bin/engine-setup --offline --config-append=/root/answers 1>/dev/virtio-ports/org.ovirt.hosted-engine-setup.0 2>&1
 - if [ $? -eq 0 ]; then echo "HE_APPLIANCE_ENGINE_SETUP_SUCCESS" >/dev/virtio-ports/org.ovirt.hosted-engine-setup.0; else echo "HE_APPLIANCE_ENGINE_SETUP_FAIL" >/dev/virtio-ports/org.ovirt.hosted-engine-setup.0; fi
 - systemctl mask cloud-init-local ||  chkconfig cloud-init-local off
 - systemctl mask cloud-init || ( chkconfig cloud-init off && chkconfig cloud-config off && chkconfig cloud-final off )
 - setenforce 1
